{"version":3,"sources":["logo.svg","components/partials/Header.jsx","context.js","components/contacts/Contacts.jsx","components/contacts/ContactData.jsx","components/partials/FormInputFields.jsx","components/contacts/AddContactForm.jsx","components/pages/About.jsx","components/pages/Page404.jsx","components/contacts/EditContactForm.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","title","react_default","a","createElement","className","src","logo","alt","href","target","rel","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","defaultProps","Context","React","createContext","reducer","state","action","Object","objectSpread","contacts","filter","data","payload","toConsumableArray","concat","map","Provider","dispatch","_this","setState","axios","get","res","this","value","children","Component","Consumer","Contacts","showContactInfo","onClickHandler","_callee","regenerator_default","wrap","_context","prev","next","delete","sent","stop","_this2","_this$props$contacts","name","email","phone","onClick","bind","ContactData","Fragment","contacts_Contacts","key","FormInputFields","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContactForm","onChangeHandler","e","defineProperty","onSubmitForm","_this$state","newContact","preventDefault","abrupt","uuid","post","history","push","_this$state2","onSubmit","partials_FormInputFields","About","Page404","EditContactForm","contactUpdate","match","params","put","contact","App","context_Provider","HashRouter","partials_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b5c1af7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport { Link } from 'react-router-dom';\r\nconst Header =(props)=> {\r\n    const { title } = props;\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>Edit <code>src/App.js</code> and save to reload.</p>\r\n                <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Learn React</a>\r\n            </header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <Link className=\"nav-item nav-link\" to=\"/\"><i className=\"fas fa-home\"></i> Home <span className=\"sr-only\">(current)</span></Link>\r\n                            <Link className=\"nav-item nav-link\" to=\"/contact/add\"><i className=\"fas fa-plus\"></i> Add</Link>\r\n                            <Link className=\"nav-item nav-link\" to=\"/about\"><i className=\"fas fa-jedi\"></i> About</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'My App'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context  = React.createContext();\r\nconst reducer =(state, action)=> {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT': return {\r\n            ...state,\r\n            contacts: state.contacts.filter(data => data.id !== action.payload)\r\n        }\r\n        case 'ADD_CONTACTS': return {\r\n            ...state,\r\n            contacts: [...state.contacts, action.payload]\r\n        }\r\n        case 'UPDATE_CONTACTS': return {\r\n            ...state,\r\n            contacts: state.contacts.map(data => (action.payload.id === data.id ? (data = action.payload) : data ))\r\n        }\r\n        default: return { state }\r\n    }\r\n}\r\n\r\nexport default class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(\r\n                state => reducer(state, action)\r\n            )\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n    }\r\n    render() {\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Contacts extends Component {\r\n    state = {\r\n        showContactInfo: false,\r\n    }\r\n\r\n    onClickHandler = async (id, dispatch) => {\r\n        const res = await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({ type: 'DELETE_CONTACT', payload: res.id });\r\n    }\r\n\r\n    render() {\r\n        const { showContactInfo } = this.state;\r\n        const { id, name, email, phone } = this.props.contacts;\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { dispatch } = value;\r\n                        return (\r\n                            <div className=\"Contacts\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">{name}\r\n                                        <i className=\"fas fa-sort-down\" onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}></i>\r\n                                        <span className=\"icon-padding-left\">\r\n                                            <Link to={`contact/edit/${id}`}><i className=\"fas fa-pencil-alt\"></i></Link>\r\n                                        </span>\r\n                                        <span className=\"icon-padding-top\">\r\n                                            <i className=\"fas fa-times justify-content-end\" onClick={this.onClickHandler.bind(this, id, dispatch)}></i>\r\n                                        </span>\r\n                                    </div>\r\n                                    {\r\n                                        showContactInfo ? (\r\n                                            <div className=\"card-body\">\r\n                                                <ul className=\"list-group\">\r\n                                                    <li className=\"list-group-item\">{email}</li>\r\n                                                    <li className=\"list-group-item\">{phone}</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport Contacts from './Contacts.jsx';\r\nimport { Consumer } from './../../context.js';\r\n\r\nconst ContactData = () => {\r\n\r\n    return (\r\n        <Consumer>\r\n            {\r\n                value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            {\r\n                                contacts.map(\r\n                                    data => (\r\n                                        <Contacts key={data.id} contacts={data}></Contacts>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            }\r\n        </Consumer>\r\n    );\r\n}\r\n\r\nexport default ContactData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst FormInputFields =(props)=> {\r\nconst { type, label, name, placeholder, value, onChange, error } = props;\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={label}></label>\r\n            <input\r\n                type={type}\r\n                className={classnames(\"form-control\", {\"is-invalid\": error})}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nFormInputFields.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nFormInputFields.defaultProps = {\r\n    type: 'text',\r\n}\r\n\r\nexport default FormInputFields;","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport { Consumer } from '../../context';\r\nimport FormInputFields from './../partials/FormInputFields';\r\nimport axios from 'axios';\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    error: {}\r\n  }\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmitForm = async(dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    \r\n    // Input requirement check\r\n    if(name === '') {\r\n      this.setState({error: {name: 'Name is required!'}})\r\n      return;\r\n    }\r\n    if(email === '') {\r\n      this.setState({error: {email: 'Email is required!'}})\r\n      return;\r\n    }\r\n    if(phone === '') {\r\n      this.setState({error: {phone: 'Contact no. is required!'}})\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name: name,\r\n      email: email,\r\n      phone: phone,\r\n    }\r\n    \r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n    dispatch({type: 'ADD_CONTACTS', payload: res.data});\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      error: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, error } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {\r\n          value => {\r\n            const { dispatch } = value;\r\n            return (\r\n              <div className=\"card mb-3 mt-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmitForm.bind(this, dispatch)}>\r\n                    <FormInputFields\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter name: \"\r\n                      value={name}\r\n                      onChange={this.onChangeHandler}\r\n                      error={error.name}\r\n                    />\r\n                    <FormInputFields\r\n                      type=\"email\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter email: \"\r\n                      value={email}\r\n                      onChange={this.onChangeHandler}\r\n                      error={error.email}\r\n                    />\r\n                    <FormInputFields\r\n                      label=\"Contact no.\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter contact phone: \"\r\n                      value={phone}\r\n                      onChange={this.onChangeHandler}\r\n                      error={error.phone}\r\n                    />\r\n                    <button className=\"btn btn-dark bg-primary\">Submit</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-6\">This is the about page.</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Page404 = () => {;\r\n  return (\r\n    <div>\r\n      <h1 className=\"diesplay-6\">404</h1>\r\n      <p className=\"lead\">The page you are looking for does not exist</p>\r\n      <Link to=\"/\"><i className=\"fas fa-home\"></i> Go Home</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page404;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport FormInputFields from './../partials/FormInputFields';\r\nimport axios from 'axios';\r\n\r\nclass EditContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    error: {}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmitForm = async(dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    \r\n    // Input requirement check\r\n    if(name === '') {\r\n      this.setState({error: {name: 'Name is required!'}})\r\n      return;\r\n    }\r\n    if(email === '') {\r\n      this.setState({error: {email: 'Email is required!'}})\r\n      return;\r\n    }\r\n    if(phone === '') {\r\n      this.setState({error: {phone: 'Contact no. is required!'}})\r\n      return;\r\n    }\r\n    // Initialize contact update\r\n    const contactUpdate = {\r\n      name: name,\r\n      email: email,\r\n      phone: phone \r\n    }\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, contactUpdate);\r\n    dispatch({type: 'UPDATE_CONTACTS', payload: res.data});\r\n    // Clear state after update\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      error: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, error } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {\r\n          value => {\r\n            const { dispatch } = value;\r\n            return (\r\n              <div className=\"card mb-3 mt-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmitForm.bind(this, dispatch)}>\r\n                    <FormInputFields\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Edit name: \"\r\n                      value={name}\r\n                      onChange={this.onChangeHandler}\r\n                      error={error.name}\r\n                    />\r\n                    <FormInputFields\r\n                      type=\"email\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Edit email: \"\r\n                      value={email}\r\n                      onChange={this.onChangeHandler}\r\n                      error={error.email}\r\n                    />\r\n                    <FormInputFields\r\n                      label=\"Contact no.\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Edit contact phone: \"\r\n                      value={phone}\r\n                      onChange={this.onChangeHandler}\r\n                      error={error.phone}\r\n                    />\r\n                    <button className=\"btn btn-dark bg-primary\">Submit</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContactForm;","// Module imports\nimport React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n// Resource imports\nimport './assets/css/common.min.css';\n// Components\nimport Header from './components/partials/Header.jsx';\nimport ContactData from './components/contacts/ContactData.jsx';\nimport Provider from './context.js';\nimport AddContactForm from './components/contacts/AddContactForm.jsx';\n// Pages\nimport About from './components/pages/About';\nimport Page404 from './components/pages/Page404';\nimport EditContactForm from './components/contacts/EditContactForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <Header title={'Contact Manager'}></Header>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={ContactData}></Route>\n                <Route exact path=\"/about\" component={About}></Route>\n                <Route exact path=\"/contact/add\" component={AddContactForm}></Route>\n                <Route exact path=\"/contact/edit/:id\" component={EditContactForm}></Route>\n                <Route component={Page404}></Route>\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}